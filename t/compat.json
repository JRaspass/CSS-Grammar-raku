[ "ws", { "input" : " " } ]
[ "ws", { "input" : "/* comments\n1 */" } ]
[ "ws", { "input" : "<!-- comments\n2 -->" } ]
[ "ws", { "input" : "<!-- unterminated comment", "warnings" : [ "unclosed comment at end of input" ] } ]
[ "ws", { "input" : "/* unterminated\nstar\ncomment ... ", "warnings" : [ "unclosed comment at end of input" ] } ]
[ "name", { "input" : "my-class", "ast" : "my-class" } ]
[ "unicode", { "input" : "021", "ast" : "!" } ]
[ "unicode", { "skip" : "unicode surrogates handling in rakudo", "input" : "0D800", "ast" : "�", "warnings": [ "invalid unicode code-point: U+0D800" ], "css1" : { "parse" : "0D80", "ast" : "඀", "warnings" : [] } } ]
[ "num", { "input" : "2.52", "ast" : 2.52 } ]
[ "num", { "input" : "0", "ast" : 0 } ]
[ "num", { "input" : "1", "ast" : 1 } ]
[ "num", { "input" : ".1", "ast" : 0.1 } ]
[ "num", { "input" : "+1.9", "ast" : 1.9 } ]
[ "num", { "input" : "-3.14", "ast" : -3.14 } ]
[ "id", { "input" : "#z0y\\021", "ast" : "z0y!" } ]
// unicode trailing ws consumed in css2.1 and css3, but not css1
[ "string", { "input" : "'hi\\021 there'", "ast" : "hi!there", "css1" : { "ast" : "hi! there" } } ]
[ "class", { "input" : ".zippy", "ast" : "zippy" } ]
[ "class", { "input" : ".\\55ft", "ast" : "\u055ft" } ]
[ "color", { "input" : "Rgb(10, 20, 30)", "ast" : [ { "num" : 10 }, { "num" : 20 }, { "num" : 30 } ], "token" : { "type" : "color", "units" : "rgb" } } ]
[ "pseudo", { "input" : ":visited", "ast" : { "class" : "visited" } } ]
[ "pseudo", { "input" : ":Lang(fr-ca)", "ast" : { "pseudo-func" : { "ident" : "lang", "args" : [ { "ident" : "fr-ca" } ] } }, "css1" : { "parse" : ":Lang", "ast" : { "class" : "lang" } } } ]
[ "import", { "input" : "@import url('file:///etc/passwd');", "ast" : { "url" : "file:///etc/passwd" } } ]
[ "import", { "input" : "@IMPORT '/etc/group';", "ast" : { "url" : "/etc/group" } } ]
// imports can be assigned to media types. See:
// http://www.w3.org/TR/2011/REC-CSS2-20110607/cascade.html#at-import
[ "import", { "input" : "@import url(bluish\\.css) projection, tv;", "ast" : { "url" : "bluish.css", "media-list" : [ { "media-query" : [ { "media" : "projection" } ] }, { "media-query" : [ { "media" : "tv" } ] } ] }, "css1" : { "parse" : "", "ast" : null } } ]
[ "class", { "input" : ".class", "ast" : "class" } ]
[ "simple-selector", { "input" : "BODY", "ast" : [ { "qname" : { "element-name" : "body" } } ] } ]
[ "selector", { "input" : "A:Visited", "ast" : [ { "simple-selector" : [ { "qname" : { "element-name" : "a" } }, { "pseudo" : { "class" : "visited" } } ] } ] } ]
[ "selector", { "input" : ":visited", "ast" : [ { "simple-selector" : [ { "pseudo" : { "class" : "visited" } } ] } ] } ]
// Note: CSS1 doesn't allow '_' in names or identifiers
[ "selector", { "input" : ".some_class", "ast" : [ { "simple-selector" : [ { "class" : "some_class" } ] } ], "css1" : { "parse" : ".some", "ast" : [ { "simple-selector" : [ { "class" : "some" } ] } ] } } ]
[ "selector", { "input" : ".some_class:link", "ast" : [ { "simple-selector" : [ { "class" : "some_class" }, { "pseudo" : { "class" : "link" } }] } ], "css1" : { "parse" : ".some", "ast" : [ { "simple-selector" : [ { "class" : "some" } ] } ] } } ]
[ "simple-selector", { "input" : "BODY.some_class", "ast" : [ { "qname" : { "element-name" : "body" } }, { "class" : "some_class" } ], "css1" : { "parse" : "BODY.some", "ast" : [ { "qname" : { "element-name" : "body" } }, { "class" : "some" } ] } } ]
[ "pseudo", { "input" : ":first-line", "ast" : { "element" : "first-line" } } ]
[ "selector", { "input" : "BODY.some-class:active", "ast" : [ { "simple-selector" : [ { "qname" : { "element-name" : "body" } }, { "class" : "some-class" }, { "pseudo" : { "class" : "active" } } ] } ] } ]
// CSS1 selectors are more restrictive and order sensitive
[ "selector", { "input" : ".c1#ID.c2 .d1.d2", "ast" : [ { "simple-selector" : [ { "class" : "c1" }, { "id" : "ID" }, { "class" : "c2" } ] }, { "simple-selector" : [ { "class" : "d1" }, { "class" : "d2" } ] } ], "css1" : { "ast" : [ { "simple-selector" : [ { "class" : "c1" } ] }, { "simple-selector" : [ { "id" : "ID" }, { "class" : "c2" } ] }, { "simple-selector" : [ { "class" : "d1" } ] }, { "simple-selector" : [ { "class" : "d2" } ] } ] } } ]
// Test for whitespace sensitivity in selectors
[ "selector", { "input" : "#my-id /* white-space */ :first-line", "ast" : [ { "simple-selector" : [ { "id" : "my-id" } ] }, { "simple-selector" : [ { "pseudo" : { "element" : "first-line" } } ] } ] } ]
[ "selector", { "input" : "#my-id:first-line", "ast" : [ { "simple-selector" : [ { "id" : "my-id" }, { "pseudo" : { "element" : "first-line" } } ] } ] } ]
[ "selector", { "input" : "#my-id+:first-line", "css1" : { "parse" : "#my-id", "ast" : [ { "simple-selector" : [ { "id" : "my-id" } ] } ] }, "ast" : [ { "simple-selector" : [ { "id" : "my-id" } ] }, { "combinator" : "+" }, { "simple-selector" : [ { "pseudo" : { "element" : "first-line" } } ] } ] } ]
// CSS1 doesn't understand '+' combinator
[ "selector", { "input" : "#my-id + :first-line", "css1" : { "parse" : "#my-id", "ast" : [ { "simple-selector" : [ { "id" : "my-id" } ] } ] }, "ast" : [ { "simple-selector" : [ { "id" : "my-id" } ] }, { "combinator" : "+" }, { "simple-selector" : [ { "pseudo" : { "element" : "first-line" } } ] } ] } ]
// '>' combinator also introduced with css2.1
[ "selector", { "input" : "ol > li:first-child + li +li+ li+li", "ast" : [ { "simple-selector" : [ { "qname" : { "element-name" : "ol" } } ] }, { "combinator" : ">" }, { "simple-selector" : [ { "qname" : { "element-name" : "li" } }, { "pseudo" : { "class" : "first-child" } } ] }, { "combinator" : "+" }, { "simple-selector" : [ { "qname" : { "element-name" : "li" } } ] }, { "combinator" : "+" }, { "simple-selector" : [ { "qname" : { "element-name" : "li" } } ] }, { "combinator" : "+" }, { "simple-selector" : [ { "qname" : { "element-name" : "li" } } ] }, { "combinator" : "+" }, { "simple-selector" : [ { "qname" : { "element-name" : "li" } } ] } ], "css1" : { "parse" : "ol", "ast" : [ { "simple-selector" : [ { "qname" : { "element-name" : "ol" } } ] } ] } } ]
[ "selector", { "input" : "A:first-letter", "ast" : [ { "simple-selector" : [ { "qname" : { "element-name" : "a" } }, { "pseudo" : { "element" : "first-letter" } } ] } ] } ]
[ "selector", { "input" : "A:Link IMG", "ast" : [ { "simple-selector" : [ { "qname" : { "element-name" : "a" } }, { "pseudo" : { "class" : "link" } } ] }, { "simple-selector" : [ { "qname" : { "element-name" : "img" } } ] } ] } ]
// css1 doesn't understand ':after' pseudo element
[ "selector", { "input" : "A:After IMG", "css1" : { "ast" : [ { "simple-selector" : [ { "qname" : { "element-name" : "a" } }, { "pseudo" : { "class" : "after" } } ] }, { "simple-selector" : [ { "qname" : { "element-name" : "img" } } ] } ] }, "ast" : [ { "simple-selector" : [ { "qname" : { "element-name" : "a" } }, { "pseudo" : { "element" : "after" } } ] }, { "simple-selector" : [ { "qname" : { "element-name" : "img" } } ] } ] } ]
[ "selector", { "input" : "H1[lang=fr]", "ast" : [ { "simple-selector" : [ { "qname" : { "element-name" : "h1" } }, { "attrib" : [ { "ident" : "lang" }, { "attribute-selector" : "=" }, { "ident" : "fr" } ] } ] } ], "css1" : { "parse" : "H1", "ast" : [ { "simple-selector" : [ { "qname" : { "element-name" : "h1" } } ] } ] } } ]
[ "selector", { "input" : "*[lang=fr]", "ast" : [ { "simple-selector" : [ { "universal" : { "element-name" : "*" } }, { "attrib" : [ { "ident" : "lang" }, { "attribute-selector" : "=" }, { "ident" : "fr" } ] } ] } ], "css1" : { "parse" : "", "ast" : null } } ]
[ "expr", { "input" : "RGB(-10,133,257 ), #fa7", "ast" : [ { "rgb" : [ { "num" : 0 }, { "num" : 133 }, { "num" : 255 } ] }, { "op" : "," }, { "rgb" : [ { "num" : 255 }, { "num" : 170 }, { "num" : 119 } ] } ] } ]
[ "expr", { "input" : "'Helvetica Neue',helvetica-neue, helvetica", "ast" : [ { "string" : "Helvetica Neue" }, { "op" : "," }, { "ident" : "helvetica-neue" }, { "op" : "," }, { "ident" : "helvetica" } ] } ]
[ "expr", { "input" : "+13mm EM", "ast" : [ { "mm" : 13 }, { "em" : 1 } ] } ]
[ "expr", { "input" : "-1CM", "ast" : [ { "cm" : -1 } ] } ]
[ "expr", { "input" : "2px solid blue", "ast" : [ { "px" : 2 }, { "ident" : "solid" }, { "ident" : "blue" } ] } ]
// css21+ expressions
[ "expr", { "input" : "top,ccc/dddd", "ast" : [ { "ident" : "top" }, { "op" : "," }, { "ident" : "ccc" }, { "op" : "/" }, { "ident" : "dddd" } ] } ]
[ "expr", { "input" : "-moz-linear-gradient", "ast" : [ { "ident" : "-moz-linear-gradient" } ], "css1" : { "ast" : [ { "ident" : "moz-linear-gradient" } ] } } ]
// css2 understands some functions
[ "expr", { "input" : "-moz-linear-gradient(top, t2, t3)", "ast" : [ { "func" : { "ident" : "-moz-linear-gradient", "expr" : [ { "ident" : "top" }, { "op" : "," }, { "ident" : "t2" }, { "op" : "," }, { "ident" : "t3" } ] } } ], "css1" : { "ast" : null, "parse" : "", "warnings" : null } } ]
[ "expr", { "input" : "Alpha(Opacity=70)", "ast" : [ { "func" : { "ident" : "alpha", "expr" : [ { "ident" : "opacity" }, { "op" : "=" }, { "num" : 70 } ] } } ], "css1" : { "ast" : null, "parse" : "", "warnings" : null } } ]
[ "expr", { "input" : "12px/20px", "ast" : [ { "px" : 12 }, { "op" : "/" }, { "px" : 20 } ] } ]
[ "declaration-list", { "input" : "terms: 42 7% 12.5cm -1em 2 ex 45deg 10s 50Hz 'ZZ' counter(a,b) counters(p,'s') attr(data-foo)", "ast" : [ { "ident" : "terms", "expr" : [ { "num" : 42 }, { "percent" : 7 }, { "cm" : 12.5 }, { "em" : -1 }, { "num" : 2 }, { "ex" : 1 }, { "deg" : 45 }, { "s" : 10 }, { "hz" : 50 }, { "string" : "ZZ" }, { "func" : { "ident" : "counter", "expr" : [ { "ident" : "a" }, { "op" : "," }, { "ident" : "b" } ] } }, { "func" : { "ident" : "counters", "expr" : [ { "ident" : "p" }, { "op" : "," }, { "string" : "s" } ] } }, { "func" : { "ident" : "attr", "expr" : [ { "ident" : "data-foo" } ] } } ] } ], "css1" : { "warnings" : [ "dropping term: 45deg 10s 50Hz 'ZZ' counter(a,b) counters(p,'s') attr(data-foo)", "dropping declaration: terms" ], "ast" : null } } ]
[ "declaration", { "input" : "line-height: 1.1px !important", "ast" : { "ident" : "line-height", "expr" : [ { "px" : 1.1 } ], "prio" : "important" } } ]
[ "declaration", { "input" : "line-height: 1.5px !vital", "warnings" : [ "dropping term: !vital" ], "ast" : { "ident" : "line-height", "expr" : [ { "px" : 1.5 } ] } } ]
[ "declaration", { "input" : " /*ww*/ margin/*xx*/:/*yy*/1em/*zz*/", "ast" : { "ident" : "margin", "expr" : [ { "em" : 1 } ] } } ]
[ "declaration", { "input" : "border: 2px solid blue", "ast" : { "ident" : "border", "expr" : [ { "px" : 2 }, { "ident" : "solid" }, { "ident" : "blue" } ] } } ]
[ "declaration-list", { "input" : "font-size:0px;color:white;z-index:-9;position:absolute;left:-999px", "ast" : [ { "ident" : "font-size", "expr" : [ { "px" : 0 } ] }, { "ident" : "color", "expr" : [ { "ident" : "white" } ] }, { "ident" : "z-index", "expr" : [ { "num" : -9 } ] }, { "ident" : "position", "expr" : [ { "ident" : "absolute" } ] }, { "ident" : "left", "expr" : [ { "px" : -999 } ] } ] } ]
[ "ruleset", { "input" : "H1 { color: blue; }", "ast" : { "selectors" : [ { "selector" : [ { "simple-selector" : [ { "qname" : { "element-name" : "h1" } } ] } ] } ], "declarations" : [ { "ident" : "color", "expr" : [ { "ident" : "blue" } ] } ] } } ]
[ "ruleset", { "input" : "A:link H1 { color: blue; }", "ast" : { "selectors" : [ { "selector" : [ { "simple-selector" : [ { "qname" : { "element-name" : "a" } }, { "pseudo" : { "class" : "link" } } ] }, { "simple-selector" : [ { "qname" : { "element-name" : "h1" } } ] } ] } ], "declarations" : [ { "ident" : "color", "expr" : [ { "ident" : "blue" } ] } ] } } ]
[ "ruleset", { "input" : "A:link,H1 { color: blue; }", "ast" : { "selectors" : [ { "selector" : [ { "simple-selector" : [ { "qname" : { "element-name" : "a" } }, { "pseudo" : { "class" : "link" } } ] } ] }, { "selector" : [ { "simple-selector" : [ { "qname" : { "element-name" : "h1" } } ] } ] } ], "declarations" : [ { "ident" : "color", "expr" : [ { "ident" : "blue" } ] } ] } } ]
[ "ruleset", { "input" : "H1#abc { color: blue; }", "ast" : { "selectors" : [ { "selector" : [ { "simple-selector" : [ { "qname" : { "element-name" : "h1" } }, { "id" : "abc" } ] } ] } ], "declarations" : [ { "ident" : "color", "expr" : [ { "ident" : "blue" } ] } ] } } ]
[ "ruleset", { "input" : "A.external:visited { color: blue; }", "ast" : { "selectors" : [ { "selector" : [ { "simple-selector" : [ { "qname" : { "element-name" : "a" } }, { "class" : "external" }, { "pseudo" : { "class" : "visited" } } ] } ] } ], "declarations" : [ { "ident" : "color", "expr" : [ { "ident" : "blue" } ] } ] } } ]
[ "simple-selector", { "input" : "A[ href ]", "ast" : [ { "qname" : { "element-name" : "a" } }, { "attrib" : [ { "ident" : "href" } ] } ], "css1" : { "parse" : "A", "ast" : [ { "qname" : { "element-name" : "a" } } ] } } ]
[ "simple-selector", { "input" : "a[href~='foo']", "ast" : [ { "qname" : { "element-name" : "a" } }, { "attrib" : [ { "ident" : "href" }, { "attribute-selector" : "~=" }, { "string" : "foo" } ] } ], "css1" : { "parse" : "a", "ast" : [ { "qname" : { "element-name" : "a" } } ] } } ]
// character set differences:
// \255 is not recognised by css1 or css2.1 as non-ascii chars
[ "ruleset", { "input" : ".TB\t{mso-special-format:nobullet\u0095;}", "ast" : { "selectors" : [ { "selector" : [ { "simple-selector" : [ { "class" : "TB" } ] } ] } ], "declarations" : [ ] }, "warnings" : [ "dropping term: \\x[95]", "dropping declaration: mso-special-format" ], "css3" : { "warnings" : null, "ast" : { "selectors" : [ { "selector" : [ { "simple-selector" : [ { "class" : "TB" } ] } ] } ], "declarations" : [ { "ident" : "mso-special-format", "expr" : [ { "ident" : "nobullet\u0095" } ] } ] } } } ]
// unclosed rulesets (css1 doesn't understand angles)
    [ "ruleset", { "input" : "H2 { color: green; rotation: 70deg; }", "ast" : { "selectors" : [ { "selector" : [ { "simple-selector" : [ { "qname" : { "element-name" : "h2" } } ] } ] } ], "declarations" : [ { "ident" : "color", "expr" : [ { "ident" : "green" } ] }, { "ident" : "rotation", "expr" : [ { "deg" : 70 } ] } ] }, "css1" : { "warnings" : [ "dropping term: 70deg", "dropping declaration: rotation" ], "ast" : { "selectors" : [ { "selector" : [ { "simple-selector" : [ { "qname" : { "element-name" : "h2" } } ] } ] } ], "declarations" : [ { "ident" : "color", "expr" : [ { "ident" : "green" } ] } ] } } } ]
[ "ruleset", { "input" : "H1 { color }", "warnings" : [ "dropping term: color" ], "ast" : null } ]
[ "ruleset", { "input" : "H1 { color; }", "warnings" : [ "dropping term: color" ], "ast" : null } ]
[ "ruleset", { "input" : "H1 { : blue }", "warnings" : [ "dropping term: : blue" ], "ast" : null } ]
[ "ruleset", { "input" : "H1 { color blue }", "warnings" : [ "dropping term: color blue" ], "ast" : null } ]
[ "ruleset", { "input" : "H1 { color: }", "warnings" : [ "dropping declaration: color" ], "ast" : null } ]
[ "ruleset", { "input" : "H2 { color: green; rotation: 70deg;", "warnings" : [ "no closing '}'" ], "ast" : null, "css1" : { "warnings" : [ "dropping term: 70deg", "dropping declaration: rotation", "no closing '}'" ] } } ]
[ "ruleset", { "input" : "H2 { color: green; rotation: }", "warnings" : "dropping declaration: rotation", "ast" : null } ]
[ "ruleset", { "input" : "H2 { test: 'this is not closed", "warnings" : [ "unterminated string: 'this is not closed", "dropping declaration: test", "no closing '}'" ], "ast" : null, "core" : { "warnings" : "unterminated string: 'this is not closed" } } ]
[ "at-rule", { "input" : "media print {body{margin: 1cm}}", "ast" : { "media-list" : [ { "media-query" : [ { "media" : "print" } ] } ], "media-rules" : [ { "ruleset" : { "selectors" : [ { "selector" : [ { "simple-selector" : [ { "qname" : { "element-name" : "body" } } ] } ] } ], "declarations" : [ { "ident" : "margin", "expr" : [ { "cm" : 1 } ] } ] } } ], "@" : "media" }, "css1" : { "skip" : "N/A to CSS1" } } ]
[ "at-rule", { "input" : "Page :first { margin-right: 2cm }", "ast" : { "page" : "first", "declarations" : [ { "ident" : "margin-right", "expr" : [ { "cm" : 2 } ] } ], "@" : "page" }, "css1" : { "skip" : "N/A to CSS1" } } ]
[ "stylesheet", { "input" : "@charset 'bazinga';", "ast" : [ { "charset-rule" : "bazinga" } ], "css1" : { "ast" : null, "warnings" : [ "dropping: @charset 'bazinga';" ] } } ]
[ "stylesheet", { "input" : "@Import 'foo'; H1 { color: blue; }; @charset 'bazinga'; @import 'too-late'; H2{color:green}", "ast" : [ { "import" : { "url" : "foo" } }, { "ruleset" : { "selectors" : [ { "selector" : [ { "simple-selector" : [ { "qname" : { "element-name" : "h1" } } ] } ] } ], "declarations" : [ { "ident" : "color", "expr" : [ { "ident" : "blue" } ] } ] } }, { "ruleset" : { "selectors" : [ { "selector" : [ { "simple-selector" : [ { "qname" : { "element-name" : "h2" } } ] } ] } ], "declarations" : [ { "ident" : "color", "expr" : [ { "ident" : "green" } ] } ] } } ], "warnings" : [ "ignoring out of sequence directive: @charset 'bazinga';", "ignoring out of sequence directive: @import 'too-late';" ], "css1" : { "warnings" : [ "dropping: @charset 'bazinga';", "ignoring out of sequence directive: @import 'too-late';" ] } } ]
